=====================================================================
                          VNC Reflector 1.1
               Copyright (C) 2001 HorizonLive.com, Inc.
=====================================================================


Licensing terms
~~~~~~~~~~~~~~~

This software is Copyright (C) 2001 HorizonLive.com, Inc.
All rights reserved.

This software is released under the terms specified in the file LICENSE,
included.  HorizonLive provides e-Learning and collaborative synchronous
presentation solutions in a totally Web-based environment.  For more
information about HorizonLive, please see our website at

  http://www.horizonlive.com .

This software was authored by Constantin Kaplinsky <const@ce.cctpu.edu.ru>
and sponsored by HorizonLive.com, Inc.


Command-line usage
~~~~~~~~~~~~~~~~~~

./vncreflector [OPTIONS...] HOST_INFO_FILE

Options:

  -i PID_FILE     - write pid file, appending listening port to filename
  -p PASSWD_FILE  - read plaintext client password file [default: passwd]
  -l LISTEN_PORT  - port to listen for client connections [default: 5999]
  -b IP_ADDRESS   - bind listening sockets to specific IP [default: any]
  -s FBS_PREFIX   - save host sessions in rfbproxy-compatible files,
                    appending 3-digit session IDs to filename prefix
  -g LOG_FILE     - write logs to specified file [default: reflector.log]
  -v LOG_LEVEL    - set verbosity level for log file (0..6) [default: 4]
  -f LOG_LEVEL    - run in foreground, show logs on stderr at specified
                    verbosity level (0..6) [note: use 3 for normal output]
  -h              - print this help message


Format of the HOST_INFO_FILE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

HOST_INFO_FILE provides information about the host to connect to. It's
first line should begin with hostname (or with an asterisk if we would
wait for reversed host->reflector connection). Next thing is VNC
display number after a colon (or a port number, for reversed
connections), then follows plaintext host password after a space.

Sample to connect to some.hostname.com's display :0 (port 5900):

=== cut ===
some.hostname.com:0 PaS$w0rD
=== cut ===

Sample to listen for host connection on the port 5998:

=== cut ===
*:5998 PaS$w0rD
=== cut ===


Format of the PASSWD_FILE
~~~~~~~~~~~~~~~~~~~~~~~~~

PASSWD_FILE keeps passwords for client connections.

It may contain two lines with one password on each line. First line is
for full-control client password, second line is for read-only client
password. Empty lines denote no authentication. If the file contains
one line, then there is no read-only password, and all clients would
have been granted full-control access.


Control signals
~~~~~~~~~~~~~~~

  * SIGHUP signal causes VNC Reflector to disconnect all connected
    clients.

  * SIGUSR1 signal tells VNC Reflector that it should re-read
    HOST_INFO_FILE and to re-connect to host specified there (or to
    start listening for reversed host connections). Host connection
    would be closed when new host connection is established
    successfully (auth is ok etc.). Client connections would be
    preserved.

  * SIGUSR2 signal tells VNC Reflector that it should close current
    host connection, then re-read HOST_INFO_FILE and to re-connect to
    host specified there (or to start listening for reversed host
    connections). Client connections would be preserved.

